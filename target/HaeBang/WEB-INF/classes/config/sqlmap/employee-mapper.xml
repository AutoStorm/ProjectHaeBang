<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.haebang.employee.dao.EmployeeDao">

	<!-- 로그인 -->
	<select id="login" parameterType="employeeVo" resultType="employeeVo"> 
		select * from t_employee where e_id = #{e_id} and e_password = #{e_password}		
	</select>
	
	<!-- 지도 -->
	<select id="selectAllmap" parameterType="employeeVo" resultType="mapVo">
		select m.m_name as m_name, m.m_address as m_address, e.e_name as e_name, eo.eo_status as eo_status 
		from t_member m, t_e_order eo, t_employee e, t_m_order mo 
		where e.c_no= #{c_no} and e.e_no = eo.e_no and eo.mo_no = mo.mo_no and mo.m_no = m.m_no;
	</select>


<!--*************************************** 공지사항 ******************************************-->
	<select id="getNoticeList" parameterType="java.util.Map" resultType="noticeBoardVo">
 			select n_no, n_writer, n_title, n_content, n_viewCnt, date_format( n_regDate, '%Y-%m-%d' ) as n_regDate, n_type
 			from t_notice
 			where
 				n_type = #{ n_type }
 				<if test="titlecontent != null">
	 				AND
 					(n_content like CONCAT('%',#{titlecontent},'%') or n_title like CONCAT('%',#{titlecontent},'%'))
 				</if>
 			order by n_no DESC
 			limit #{startPoint}, #{row}
 		</select> 
 	<!-- 공지사항 총 갯수  -->
 		<select id="selectTotalCount" parameterType="java.util.Map" resultType="Integer">
 			select count(*) 
 			from t_notice
 			where
 				n_type = #{ n_type }
 				<if test="titlecontent != null"> 
 					AND
 					(n_content like CONCAT('%',#{titlecontent},'%') or n_title like CONCAT('%',#{titlecontent},'%'))
 				</if>
 		</select>
 	<!-- 선택 공지사항 디테일  -->
		<select id="selectOneNDetailByNo" parameterType="noticeBoardVo" resultType="noticeBoardVo">
			 select n_no, n_writer, n_title, n_content, n_viewCnt, date_format( n_regDate, '%Y-%m-%d' ) as n_regDate, n_type
			 from t_notice 
			 where n_no = #{ n_no } 
		</select> 		
 	<!-- updateViewCnt ++   -->
 		<select id="updateViewCnt" parameterType="noticeBoardVo">
			update t_notice set n_viewCnt = #{n_viewCnt} where 	n_no = #{n_no}	
 		</select>


	<select id="selectmainnoticelist" resultType="noticeBoardVo">
		SELECT n_no, n_title, n_writer, n_content, n_viewCnt, date_format(n_regDate, '%Y-%m-%d') as n_regDate 
		FROM t_notice 
		where n_type='O'
		ORDER BY n_no DESC LIMIT 0, 5
	</select>
<!--*************************************** 공지사항 끝 ******************************************-->
	
	
	<select id="selectIdByPhone" parameterType="hashMap" resultType="employeeVo">
		select e_id, date_format(e_joinDate, '%Y-%m-%d') as e_joinDate from t_employee where e_name=#{name} and e_phone=#{phone}
	</select>
	
	<select id="selectIdByBizNo" parameterType="java.util.Map" resultType="employeeVo">
		select e.e_id, date_format(e_joinDate, '%Y-%m-%d') as e_joinDate from t_employee e, t_company c where e.e_name=#{name} and c.c_name=#{companyName} and c.c_bizNo=#{bizNo} and c.c_no = e.c_no;
	</select>
	
	<select id="getIdbyId" parameterType="employeeVo" resultType="employeeVo"> 
		select e_id from t_employee where e_id=#{e_id}
	</select>
	
	<select id="changepassword" parameterType="employeeVo">
		update t_employee set e_password=#{e_password} where e_id=#{e_id}
	</select>
<!--*************************************** 창대 파트 회원가입  ******************************************-->

	<select id="selectById" parameterType="String" resultType = "employeeVo">
		select e_id, e_type from t_employee where e_id = #{e_id}
	</select>
	
	<select id="selectByBizNo1" parameterType="String" resultType = "companyVo">
		select c_bizNo from t_company where c_bizNo = #{c_bizNo}
	</select>

	<select id="selectByBizNo2" parameterType="companyVo" resultType = "companyVo">
		select * from (select * from t_company where c_no != #{c_no}) as view where c_bizNo = #{c_bizNo}
	</select>

	<select id="selectByCode" parameterType="String" resultType = "companyVo">
		select c_no, c_name, c_phone, c_address, c_bizNo from t_company where c_code = #{c_code}
	</select>
	
	
	<insert id="insertCompany" parameterType="joinEmployeeVo" >
		insert into t_company(c_name, c_address, c_phone, c_bizNo, c_oriName, c_saveName) values(#{c_name}, #{c_address}, #{c_phone}, #{c_bizNo}, #{c_oriName}, #{c_saveName})
	</insert>

	<insert id="insertEmployeeAnd" parameterType="joinEmployeeVo" >
		insert into t_employee(e_id, e_name, e_password, e_phone, e_oriName, e_saveName, e_type, c_no) 
		values(#{e_id}, #{e_name}, #{e_password}, #{e_phone}, #{e_oriName}, #{e_saveName}, 'O', (select c_no from t_company where c_name=#{c_name} and c_bizNo =#{c_bizNo}))
	</insert>

	<insert id="insertEmployee" parameterType="joinEmployeeVo" >
		insert into t_employee(e_id, e_name, e_password, e_phone, e_oriName, e_saveName, c_no) 
		values(#{e_id}, #{e_name}, #{e_password},#{e_phone}, #{e_oriName}, #{e_saveName}, (select c_no from t_company where c_name=#{c_name} and c_bizNo =#{c_bizNo}))
	</insert>
	
	<update id="updateEmployeeCntP" parameterType="joinEmployeeVo">
		update t_company set c_empCnt = c_empCnt+1 where c_bizNo = #{c_bizNo}
	</update>

	<update id="updateEmployeeCntM" parameterType="EmployeeVo">
		update t_company set c_empCnt = c_empCnt-1 where c_no = #{c_no}
	</update>
	
<!--*************************************** 창대 파트 회원 정보  ******************************************-->


	<select id="selectByNo" parameterType="int" resultType = "companyVo">
		select c_no, c_name, c_address, c_phone, c_bizNo, c_accNo, date_format(c_signDate,'%Y-%m-%d') as c_signDate, 
		date_format(c_regDate,'%Y-%m-%d') as c_regDate, c_bank, c_oriName, c_saveName, c_code, c_empCnt from t_company where c_no = #{c_no}
	</select>

	<select id="selectByCNo" parameterType="int" resultType = "employeeVo">
		select e_no, e_id, e_name, e_password, e_phone, e_type, e_oriName, e_saveName, date_format(e_joinDate,'%Y-%m-%d') as e_joinDate, c_no 
		from t_employee where c_no = #{c_no}
	</select>
	
	
	<update id="updateEmployeeOr" parameterType="hashMap">
		update ${table} set ${key} = #{value} where ${no} = #{noVal}
	</update>


	<delete id="deleteEmployeeByNo" parameterType="int">
		delete from t_employee where e_no = #{e_no}
	</delete>

	<update id="updateCompanyBizNo" parameterType="companyVo">
		update t_company set c_bizNo = #{c_bizNo}, c_oriName = #{c_oriName}, c_saveName = #{c_saveName} where c_no = #{c_no}
	</update>


	<update id="updateEmpPicture" parameterType="employeeVo">
		update t_employee set e_oriName = #{e_oriName}, e_saveName = #{e_saveName} where e_no = #{e_no}
	</update>

	<update id="updateCompanyAddress" parameterType="companyVo">
		update t_company set c_address = #{c_address} where c_no = #{c_no}
	</update>

	
</mapper>
