<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.haebang.user.dao.SrvDao">


	<select id="selectServiceList" resultType="serviceVo" parameterType="serviceVo">
		select *
		from t_service
		where s_type=#{s_type} and s_place=#{s_place} and s_size between #{s_size} and #{s_size}+9
	</select>
	
	
	 <insert id="insertScdToNewMember" parameterType="java.util.HashMap">
		insert into t_member(m_name, m_address, m_phone, m_type, m_lon, m_lat, m_gu, m_cardCo, m_cardNo, m_cardHolder, m_cardExp, m_cardCVC) 
		values(#{name}, #{address}, #{phone}, #{type}, #{lon}, #{lat}, #{gu}, #{cardCo}, #{cardNo}, #{cardHolder}, #{cardExp}, #{cardCVC})
	</insert>
	
	<update id="updateMemberInfo" parameterType="java.util.HashMap">
		update t_member set m_name=#{name}, m_address=#{address}, m_lon=#{lon}, m_lat=#{lat}, m_gu=#{gu}, m_cardCo=#{cardCo}, m_cardNo=#{cardNo}, m_cardHolder=#{cardHolder}, m_cardExp=#{cardExp}, m_cardCVC=#{cardCVC} where m_phone = #{phone};
	</update>
	
	
	<select id="selectUserByInfo" parameterType="java.util.HashMap" resultType="memberVo">
		select m_no from t_member where m_phone=#{phone}
	</select>
	
	
	<insert id="insertScdByMNoOnetime" parameterType="java.util.HashMap">
   
		insert into t_m_order(mo_orderNo, m_no, mo_startTime, mo_endTime, s_no, mo_cnt, mo_total, mo_freqType, mo_freqCycle, mo_memo, mo_callFlag) 
		values(#{orderNo}, #{m_no}, #{startTime}, #{endTime}, #{service}, #{cnt}, #{total}, #{unit}, #{cycle}, #{comments}, 'ing')
	</insert>
	
	
	<insert id="insertScdByMNo" parameterType="java.util.HashMap">
		insert into t_m_order(mo_orderNo, m_no, mo_startTime, mo_endTime, s_no, mo_cnt, mo_total, mo_freqType, mo_freqCycle, mo_memo, mo_callFlag) values
		<foreach collection="scheduleList" item="item" separator=",">
		(#{orderNo}, #{m_no}, #{item.startTime}, #{item.endTime}, #{service}, #{item.cnt}, #{total}, #{unit}, #{cycle}, #{comments}, 'ing')
		</foreach>
	</insert>
	
	
	<select id="getServiceInfo" parameterType="Integer" resultType="serviceVo">
		select * from t_service where s_no = #{s_no}
	</select>
	
	
	
	


	<select id="selectNoOneEmployee" parameterType="java.util.HashMap" resultType="Integer">
	
	select lastOne.e_no from
(select
scoreTable.e_no, scoreTable.e_name,
scoreTable.mo_starAvg, scoreTable.lonlatGrade,
scoreTable.profitGrade, scoreTable.subTimeGrade,
(scoreTable.mo_starAvg+scoreTable.lonlatGrade+scoreTable.profitGrade+scoreTable.subTimeGrade) as totalGrade

from
(select totalData.e_no, totalData.e_name, totalData.c_no, totalData.mo_no, totalData.subTimeValue, totalData.m_lon, totalData.m_lat,
prevMonthData.s_priceSum, if(prevMonthData.mo_starAvg>0,prevMonthData.mo_starAvg,0) as mo_starAvg,

(case when (ABS(totalData.m_lon -#{lon}) + 
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.5 then 1 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.4 then 1.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.3 then 2 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.2 then 2.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.1 then 3 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.05 then 3.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >= 0 then 4 else 0.5 end) as
lonlatGrade,

(case when (prevMonthData.s_priceSum)-#{prevMonthOutCome}=0 then 3 
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >2000000 then 1.1
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1800000 then 1.3
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1600000 then 1.5
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1400000 then 1.7
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1200000 then 1.9
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1000000 then 2.1
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >800000 then 2.3
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >100000 then 2.5
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >50000 then 2.7
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >10000 then 2.9 else 2.95 end) as
profitGrade,

(case 
when (totalData.subTimeValue) >= 540 then 1 
when (totalData.subTimeValue) >= 480 then 1.2
when (totalData.subTimeValue) >= 420 then 1.4
when (totalData.subTimeValue) >= 360 then 1.6
when (totalData.subTimeValue) >= 300 then 1.8
when (totalData.subTimeValue) >= 240 then 2.0
when (totalData.subTimeValue) >= 180 then 2.2
when (totalData.subTimeValue) >= 120 then 2.4
when (totalData.subTimeValue) >= 60 then 2.6
else 0.5 end) as
subTimeGrade

from 
(



select t_employee.e_no, t_employee.e_name, t_employee.c_no,
allMOrderNServiceNMemberNEOrderEmployee.mo_no, allMOrderNServiceNMemberNEOrderEmployee.s_no, 
allMOrderNServiceNMemberNEOrderEmployee.m_no, allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,
(Minute(Timediff(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,#{dateHourMinuteForNoOneEmployee}))
+HOUR(Timediff(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,#{dateHourMinuteForNoOneEmployee}))*60) as subTimeValue,
allMOrderNServiceNMemberNEOrderEmployee.m_lon, allMOrderNServiceNMemberNEOrderEmployee.m_lat, 
allMOrderNServiceNMemberNEOrderEmployee.m_gu
from t_employee
left join 
(select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime,"%Y%m%d") = #{dateForNoOneEmployee}) as allMOrderNServiceNMemberNEOrderEmployee
on t_employee.e_no = allMOrderNServiceNMemberNEOrderEmployee.e_no
where t_employee.e_no not in

(select t_employee.e_no
from t_employee
left join 
(select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime,"%Y%m%d") = #{dateForNoOneEmployee}) as allMOrderNServiceNMemberNEOrderEmployee
on t_employee.e_no = allMOrderNServiceNMemberNEOrderEmployee.e_no
where date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") = #{dateHourForNoOneEmployee}
)
and
(date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") != #{dateHourForNoOneEmployee} or 
date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") is null)

) as totalData
left join 

(select 
allMOrderNServiceNMemberNEOrderNEmployee.c_no,
sum(allMOrderNServiceNMemberNEOrderNEmployee.s_price) s_priceSum,  
avg(allMOrderNServiceNMemberNEOrderNEmployee.mo_star) mo_starAvg
from (select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime, "%Y%m") = 
if(substring((date_format(now(), "%Y%m")-1),5,2)='00',
concat(substring((date_format(now(), "%Y%m")-1),1,4)-1,'12'),
date_format(now(), "%Y%m")-1)) as allMOrderNServiceNMemberNEOrderNEmployee
group by allMOrderNServiceNMemberNEOrderNEmployee.c_no) 

as prevMonthData on totalData.c_no= prevMonthData.c_no) as scoreTable order by totalGrade desc limit 1) as lastOne;
	

<!-- left join ((select * from t_cancelCall where mo_no=#{mo_no}) as t_cancelCall) 
on t_cancelCall.e_no = scoreTable.e_no where t_cancelCall.e_no is null -->

	</select>








	<select id="selectPrevMonthOutCome" resultType="Integer">
<!-- 		select MIN(A) as minValue from
		(select t_employee.c_no, count(t_service.s_price), sum(t_service.s_price) as
		A
		from (((t_m_order inner join t_service on t_m_order.s_no=t_service.s_no)
		inner join t_e_order on t_e_order.mo_no=t_m_order.mo_no)
		inner join t_employee on t_employee.e_no= t_e_order.e_no)
		where date_format(t_m_order.mo_startTime, "%Y%m") = if(substring((date_format(now(), "%Y%m")-1),5,2)='00',
		concat(substring((date_format(now(), "%Y%m")-1),1,4)-1,'12'),
		date_format(now(), "%Y%m")-1) group by t_employee.c_no) as AAA;
 -->
	
		select min(prevMonthValue.s_priceSum) from (select 
allMOrderNServiceNMemberNEOrderNEmployee.c_no,
sum(allMOrderNServiceNMemberNEOrderNEmployee.s_price) s_priceSum
from (select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime, "%Y%m") = 
if(substring((date_format(now(), "%Y%m")-1),5,2)='00',
concat(substring((date_format(now(), "%Y%m")-1),1,4)-1,'12'),
date_format(now(), "%Y%m")-1)) as allMOrderNServiceNMemberNEOrderNEmployee
group by allMOrderNServiceNMemberNEOrderNEmployee.c_no) as prevMonthValue;
	
	</select>

	<update id="createEvent" parameterType="java.util.HashMap">
	
	CREATE EVENT ${orderNo} ON SCHEDULE
EVERY 1 HOUR STARTS CURRENT_TIMESTAMP + INTERVAL 1 HOUR
DO 
BEGIN
Insert into t_cancelCall(mo_no,e_no) values(#{mo_no}, (select e_no_first from t_m_order where mo_no=#{mo_no}));
if(select lastOne.e_no from
(select
scoreTable.e_no, scoreTable.e_name,
scoreTable.mo_starAvg, scoreTable.lonlatGrade,
scoreTable.profitGrade, scoreTable.subTimeGrade,
(scoreTable.mo_starAvg+scoreTable.lonlatGrade+scoreTable.profitGrade+scoreTable.subTimeGrade) as totalGrade
from
(select totalData.e_no, totalData.e_name, totalData.c_no, totalData.mo_no, totalData.subTimeValue, totalData.m_lon, totalData.m_lat,
prevMonthData.s_priceSum, if(prevMonthData.mo_starAvg>0,prevMonthData.mo_starAvg,0) as mo_starAvg,

(case when (ABS(totalData.m_lon -#{lon}) + 
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.5 then 1 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.4 then 1.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.3 then 2 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.2 then 2.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.1 then 3 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.05 then 3.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >= 0 then 4 else 0.5 end) as
lonlatGrade,

(case when (prevMonthData.s_priceSum)-#{prevMonthOutCome}=0 then 3 
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >2000000 then 1.1
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1800000 then 1.3
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1600000 then 1.5
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1400000 then 1.7
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1200000 then 1.9
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1000000 then 2.1
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >800000 then 2.3
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >100000 then 2.5
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >50000 then 2.7
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >10000 then 2.9 else 2.95 end) as
profitGrade,

(case 
when (totalData.subTimeValue) >= 540 then 1 
when (totalData.subTimeValue) >= 480 then 1.2
when (totalData.subTimeValue) >= 420 then 1.4
when (totalData.subTimeValue) >= 360 then 1.6
when (totalData.subTimeValue) >= 300 then 1.8
when (totalData.subTimeValue) >= 240 then 2.0
when (totalData.subTimeValue) >= 180 then 2.2
when (totalData.subTimeValue) >= 120 then 2.4
when (totalData.subTimeValue) >= 60 then 2.6
else 0.5 end) as
subTimeGrade

from 

(



select t_employee.e_no, t_employee.e_name, t_employee.c_no,
allMOrderNServiceNMemberNEOrderEmployee.mo_no, allMOrderNServiceNMemberNEOrderEmployee.s_no, 
allMOrderNServiceNMemberNEOrderEmployee.m_no, allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,
(Minute(Timediff(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,#{dateHourMinuteForNoOneEmployee}))
+HOUR(Timediff(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,#{dateHourMinuteForNoOneEmployee}))*60) as subTimeValue,
allMOrderNServiceNMemberNEOrderEmployee.m_lon, allMOrderNServiceNMemberNEOrderEmployee.m_lat, 
allMOrderNServiceNMemberNEOrderEmployee.m_gu
from t_employee
left join 
(select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime,"%Y%m%d") = #{dateForNoOneEmployee}) as allMOrderNServiceNMemberNEOrderEmployee
on t_employee.e_no = allMOrderNServiceNMemberNEOrderEmployee.e_no
where t_employee.e_no not in

(select t_employee.e_no
from t_employee
left join 
(select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime,"%Y%m%d") = #{dateForNoOneEmployee}) as allMOrderNServiceNMemberNEOrderEmployee
on t_employee.e_no = allMOrderNServiceNMemberNEOrderEmployee.e_no
where date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") = #{dateHourForNoOneEmployee}
)
and
(date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") != #{dateHourForNoOneEmployee} or 
date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") is null)

) 

as totalData
left join 

(select 
allMOrderNServiceNMemberNEOrderNEmployee.c_no,
sum(allMOrderNServiceNMemberNEOrderNEmployee.s_price) s_priceSum,  
avg(allMOrderNServiceNMemberNEOrderNEmployee.mo_star) mo_starAvg
from (select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime, "%Y%m") = 
if(substring((date_format(now(), "%Y%m")-1),5,2)='00',
concat(substring((date_format(now(), "%Y%m")-1),1,4)-1,'12'),
date_format(now(), "%Y%m")-1)) as allMOrderNServiceNMemberNEOrderNEmployee
group by allMOrderNServiceNMemberNEOrderNEmployee.c_no) 

as prevMonthData on totalData.c_no= prevMonthData.c_no) as scoreTable 
left join ((select * from t_cancelCall where mo_no=#{mo_no}) as t_cancelCall) 
on t_cancelCall.e_no = scoreTable.e_no where t_cancelCall.e_no is null
order by totalGrade desc limit 1) as lastOne) is null
Then delete from t_cancelCall where mo_no=#{mo_no}; 
End if;

update t_m_order set e_no_first=(select lastOne.e_no from
(select
scoreTable.e_no, scoreTable.e_name,
scoreTable.mo_starAvg, scoreTable.lonlatGrade,
scoreTable.profitGrade, scoreTable.subTimeGrade,
(scoreTable.mo_starAvg+scoreTable.lonlatGrade+scoreTable.profitGrade+scoreTable.subTimeGrade) as totalGrade
from
(select totalData.e_no, totalData.e_name, totalData.c_no, totalData.mo_no, totalData.subTimeValue, totalData.m_lon, totalData.m_lat,
prevMonthData.s_priceSum, if(prevMonthData.mo_starAvg>0,prevMonthData.mo_starAvg,0) as mo_starAvg,

(case when (ABS(totalData.m_lon -#{lon}) + 
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.5 then 1 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.4 then 1.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.3 then 2 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.2 then 2.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.1 then 3 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >=0.05 then 3.5 when
(ABS(totalData.m_lon -#{lon}) +
(ABS(totalData.m_lat-#{lat}))*3.3) >= 0 then 4 else 0.5 end) as
lonlatGrade,

(case when (prevMonthData.s_priceSum)-#{prevMonthOutCome}=0 then 3 
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >2000000 then 1.1
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1800000 then 1.3
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1600000 then 1.5
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1400000 then 1.7
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1200000 then 1.9
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >1000000 then 2.1
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >800000 then 2.3
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >100000 then 2.5
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >50000 then 2.7
when (prevMonthData.s_priceSum)-#{prevMonthOutCome} >10000 then 2.9 else 2.95 end) as
profitGrade,

(case 
when (totalData.subTimeValue) >= 540 then 1 
when (totalData.subTimeValue) >= 480 then 1.2
when (totalData.subTimeValue) >= 420 then 1.4
when (totalData.subTimeValue) >= 360 then 1.6
when (totalData.subTimeValue) >= 300 then 1.8
when (totalData.subTimeValue) >= 240 then 2.0
when (totalData.subTimeValue) >= 180 then 2.2
when (totalData.subTimeValue) >= 120 then 2.4
when (totalData.subTimeValue) >= 60 then 2.6
else 0.5 end) as
subTimeGrade

from

(select t_employee.e_no, t_employee.e_name, t_employee.c_no,
allMOrderNServiceNMemberNEOrderEmployee.mo_no, allMOrderNServiceNMemberNEOrderEmployee.s_no, 
allMOrderNServiceNMemberNEOrderEmployee.m_no, allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,
(Minute(Timediff(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,#{dateHourMinuteForNoOneEmployee}))
+HOUR(Timediff(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,#{dateHourMinuteForNoOneEmployee}))*60) as subTimeValue,
allMOrderNServiceNMemberNEOrderEmployee.m_lon, allMOrderNServiceNMemberNEOrderEmployee.m_lat, 
allMOrderNServiceNMemberNEOrderEmployee.m_gu
from t_employee
left join 
(select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime,"%Y%m%d") = #{dateForNoOneEmployee}) as allMOrderNServiceNMemberNEOrderEmployee
on t_employee.e_no = allMOrderNServiceNMemberNEOrderEmployee.e_no
where t_employee.e_no not in

(select t_employee.e_no
from t_employee
left join 
(select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime,"%Y%m%d") = #{dateForNoOneEmployee}) as allMOrderNServiceNMemberNEOrderEmployee
on t_employee.e_no = allMOrderNServiceNMemberNEOrderEmployee.e_no
where date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") = #{dateHourForNoOneEmployee}
)
and
(date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") != #{dateHourForNoOneEmployee} or 
date_format(allMOrderNServiceNMemberNEOrderEmployee.mo_startTime,"%Y%m%d%H") is null)

) 

as totalData
left join 

(select 
allMOrderNServiceNMemberNEOrderNEmployee.c_no,
sum(allMOrderNServiceNMemberNEOrderNEmployee.s_price) s_priceSum,  
avg(allMOrderNServiceNMemberNEOrderNEmployee.mo_star) mo_starAvg
from (select 
allMOrderNServiceNMemberNEOrder.mo_no, allMOrderNServiceNMemberNEOrder.s_no, 
allMOrderNServiceNMemberNEOrder.m_no, allMOrderNServiceNMemberNEOrder.mo_startTime, 
allMOrderNServiceNMemberNEOrder.mo_star, allMOrderNServiceNMemberNEOrder.s_price, 
allMOrderNServiceNMemberNEOrder.m_lon, allMOrderNServiceNMemberNEOrder.m_lat, 
allMOrderNServiceNMemberNEOrder.m_gu, allMOrderNServiceNMemberNEOrder.e_no,
e.c_no
from 
(select 
allMOrderNServiceNMember.mo_no, allMOrderNServiceNMember.s_no, 
allMOrderNServiceNMember.m_no, allMOrderNServiceNMember.mo_startTime, 
allMOrderNServiceNMember.mo_star, allMOrderNServiceNMember.s_price, 
allMOrderNServiceNMember.m_lon, allMOrderNServiceNMember.m_lat, allMOrderNServiceNMember.m_gu, eo.e_no
from 
(select allMOrderNService.mo_no, allMOrderNService.s_no, 
allMOrderNService.m_no, allMOrderNService.mo_startTime, 
allMOrderNService.mo_star, allMOrderNService.s_price, 
m.m_lon, m.m_lat, m.m_gu
from (select mo.mo_no, mo.s_no, mo.m_no, mo.mo_startTime, mo.mo_star, s.s_price from t_m_order mo 
inner join t_service s on mo.s_no=s.s_no) as allMOrderNService 
inner join t_member m on allMOrderNService.m_no = m.m_no) as allMOrderNServiceNMember
inner join t_e_order eo on allMOrderNServiceNMember.mo_no = eo.mo_no) as allMOrderNServiceNMemberNEOrder
inner join t_employee e on allMOrderNServiceNMemberNEOrder.e_no = e.e_no
where date_format(allMOrderNServiceNMemberNEOrder.mo_startTime, "%Y%m") = 
if(substring((date_format(now(), "%Y%m")-1),5,2)='00',
concat(substring((date_format(now(), "%Y%m")-1),1,4)-1,'12'),
date_format(now(), "%Y%m")-1)) as allMOrderNServiceNMemberNEOrderNEmployee
group by allMOrderNServiceNMemberNEOrderNEmployee.c_no) 

as prevMonthData on totalData.c_no= prevMonthData.c_no) as scoreTable 
left join ((select * from t_cancelCall where mo_no=#{mo_no}) as t_cancelCall) 
on t_cancelCall.e_no = scoreTable.e_no where t_cancelCall.e_no is null
order by totalGrade desc limit 1) as lastOne) where mo_no=#{mo_no};
END
	
	</update>

<select id="selectMoNoByOrderNo" parameterType="java.util.HashMap" resultType="Integer" >
	select mo_no from t_m_order where mo_orderNo = #{orderNo} order by mo_no;
</select>

	<update id="updateENoFirstbyMoNo" parameterType="java.util.HashMap">
		update t_m_order set e_no_first=#{e_no_first} where mo_no=#{mo_no};
	</update>

	
	
	
	
</mapper>
